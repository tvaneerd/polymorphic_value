[section Type Requirements]

For:

    class MyClass {
      boost::polymorphic_value<T> component_;
    };

* `T` must be a non-union class type. 
* `T` can be an incomplete type.

For:

    U u;
    boost::polymorphic_value<T> pv(u);

and:

    boost::polymorphic_value<T> pv(U{});

* `U*` must be convertible to `T*`.
* `U` must be /CopyConstructible/.
* `U` must be nothrow destructible.

For:

    U* pu = make_some_u();
    Copier c;
    Deleter d;
    boost::polymorphic_value<T>(pu, c, d);

* `U*` must be convertible to `T*`.
*  `c(*u)` must be well-formed and must return an object that can be converted to, and stored as a `T*`.
*  `d(u)` must be well-formed and must not throw an exception.

[endsect]

